# app.py
from flask import Flask, request, jsonify
from flask_cors import CORS # Needed to connect to website later
import numpy as np

# Create the Flask app
app = Flask(__name__)
CORS(app)  # This is magic that allows connection from browsers

# This is our simple Machine Learning model for prediction
def predict_future_score(history):
    """
    This function is our ML model.
    It takes a list of past scores and predicts the total for the next 30 days.
    """
    if not history:
        return 0

    # Convert the list of scores into a numpy array (ML models like this format)
    data = np.array(history)

    # SIMPLE PREDICTION MODEL: Calculate the average daily score
    average_daily_score = np.mean(data)

    # Predict for the next 30 days
    predicted_score = average_daily_score * 30

    return round(predicted_score, 2)

# Define the API endpoint where we will receive data
@app.route('/predict', methods=['POST'])
def predict():
    # 1. Get the JSON data sent from the user (or later, the website)
    data = request.get_json()
    print("ðŸŽ¯ Data received for prediction:", data)

    # 2. Check if we got any data
    if not data:
        return jsonify({'error': 'No data received'}), 400

    # 3. Handle both data formats: 
    #    Format 1: {"scores": [5, 10, 15]} (from curl test)
    #    Format 2: [5, 10, 15] (from website)
    if isinstance(data, dict) and 'scores' in data:
        # This is Format 1: {"scores": [5, 10, 15]}
        scores = data['scores']
    elif isinstance(data, list):
        # This is Format 2: [5, 10, 15] (from website)
        scores = data
    else:
        return jsonify({'error': 'Invalid data format'}), 400
@app.route('/predict', methods=['POST'])
def predict():
    # 1. Get the JSON data sent from the user (or later, the website)
    data = request.get_json()
    print("ðŸŽ¯ Data received for prediction:", data

    # 2. Check if we got any data
    if not data or 'scores' not in data:
        return jsonify({'error': 'No scores data found'}), 400

    # 3. Get the scores from the data
    scores = data['scores']

    # 4. Use our ML function to predict the future!
    prediction = p
    result = {'prediction': prediction}
    print("âœ… Prediction result:", result)
    return jsonify(result)

# This runs the server
if __name__ == '__main__':
    print("ðŸš€ Starting your Plastic Score Predictor...")
    print("   Your ML server is running at: http://localhost:5000")
    app.run(debug=True)
